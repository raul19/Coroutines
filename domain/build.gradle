apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply from: "../detekt.gradle"

apply plugin: "de.mannodermaus.android-junit5"

def cfg = rootProject.ext.configuration
def libs = rootProject.ext.libraries

android {
    compileSdkVersion cfg.compileSdkVersion



    defaultConfig {
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField "String", "APP_ID", project.property('APP_ID')
        buildConfigField "String", "BRAND_ID", project.property('BRAND_ID')
        buildConfigField "String", "API_URL_PRODUCTION", project.property('API_URL_PRODUCTION')

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }
    sourceSets { main { assets.srcDirs = ['src/main/assets', 'src/androidTest/assets/'] } }

}

androidExtensions {
    experimental = true
}

repositories {
    mavenCentral()
}

preBuild.dependsOn detekt

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // Test JUnit5 & mockk
    testImplementation "org.junit.jupiter:junit-jupiter-api:${libs.junit5}"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${libs.junit5}"
    testImplementation "org.junit.jupiter:junit-jupiter-params:${libs.junitJupiterParams}"
    testImplementation "junit:junit:${libs.junit}"
    testImplementation "org.junit.vintage:junit-vintage-engine:${libs.junitVintage}"
    testImplementation "io.mockk:mockk:${libs.mockk}"
    androidTestImplementation "io.mockk:mockk-android:${libs.mockk}"
    testImplementation "androidx.arch.core:core-testing:${libs.coreTesting}"

    detekt "io.gitlab.arturbosch.detekt:detekt-cli:${libs.detekt}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${libs.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${libs.coroutines}"

    // AndroidX
    androidTestImplementation "androidx.test.ext:junit:${libs.testrunner}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${libs.espresso}"

    // Gson
    implementation "com.google.code.gson:gson:${libs.gson}"

//    // Rx
//    implementation "io.reactivex.rxjava2:rxjava:${libs.rxjava}"
//    implementation "io.reactivex.rxjava2:rxkotlin:${libs.rxkotlin}"
//    implementation "io.reactivex.rxjava2:rxandroid:${libs.rxandroid}"
}
